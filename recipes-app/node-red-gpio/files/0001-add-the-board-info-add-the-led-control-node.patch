From 291115a1ce254f12d9f8ba7eb3909a37771ff659 Mon Sep 17 00:00:00 2001
From: Ivan Mikhaylov <ivan.mikhaylov@siemens.com>
Date: Wed, 27 Jul 2022 18:27:23 -0400
Subject: [PATCH 1/3] add the board info add the led control node

Upstreaming TODOs:
 - factor out generic changes
 - do not break existing use cases
 - clean up

Signed-off-by: zengchao <chao.zeng@siemens.com>
[Jan: Fix LEDs]
Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com>
Signed-off-by: Ivan Mikhaylov <ivan.mikhaylov@siemens.com>
---
 hardware/intel/mraa-gpio-ain.html  |  5 +-
 hardware/intel/mraa-gpio-ain.js    |  1 +
 hardware/intel/mraa-gpio-din.html  |  2 +-
 hardware/intel/mraa-gpio-dout.html |  5 +-
 hardware/intel/mraa-gpio-led.html  | 77 +++++++++++++++++++++++++++++
 hardware/intel/mraa-gpio-led.js    | 78 ++++++++++++++++++++++++++++++
 hardware/intel/mraa-gpio-pwm.html  | 13 ++---
 hardware/intel/package.json        |  3 +-
 8 files changed, 172 insertions(+), 12 deletions(-)
 create mode 100644 hardware/intel/mraa-gpio-led.html
 create mode 100644 hardware/intel/mraa-gpio-led.js

diff --git a/hardware/intel/mraa-gpio-ain.html b/hardware/intel/mraa-gpio-ain.html
index 93d5a5a..138f91c 100644
--- a/hardware/intel/mraa-gpio-ain.html
+++ b/hardware/intel/mraa-gpio-ain.html
@@ -1,7 +1,7 @@
 
 <script type="text/javascript">
     RED.nodes.registerType('mraa-gpio-ain',{
-        category: 'Intel gpio',
+        category: 'IOT2050 gpio',
         color: '#a6bbcf',
         paletteLabel: 'analogue',
         defaults: {
@@ -27,6 +27,7 @@
                 if (data === 5) { t = "Raspberry Pi"; }
                 if (data === 6) { t = "Beaglebone"; }
                 if (data === 7) { t = "Banana"; }
+                if (data === 25) { t = "IOT2050"; }
                 $('#btype').text(t);
                 $('#node-input-pin').val(pinnow);
             });
@@ -62,7 +63,7 @@
 </script>
 
 <script type="text/x-red" data-help-name="mraa-gpio-ain">
-    <p>An analogue input pin for an Intel Galileo or Edison board that is read every <i>interval</i> milliseconds.</p>
+    <p>An analogue input pin for an IOT2050 board that is read every <i>interval</i> milliseconds.</p>
     <p>The <code>msg.payload</code> will contain the value, and <code>msg.topic</code>
     contains "{the_board_name}/A{the pin number}".</p>
     <p>The value is only sent if it is different from the previously read value.</p>
diff --git a/hardware/intel/mraa-gpio-ain.js b/hardware/intel/mraa-gpio-ain.js
index 4122551..65df93b 100644
--- a/hardware/intel/mraa-gpio-ain.js
+++ b/hardware/intel/mraa-gpio-ain.js
@@ -11,6 +11,7 @@ module.exports = function(RED) {
         var node = this;
         var msg = { topic:node.board+"/A"+node.pin };
         var old = -99999;
+        node.x.setBit(12);
         this.timer = setInterval(function() {
             msg.payload = node.x.read();
             if (msg.payload !== old) {
diff --git a/hardware/intel/mraa-gpio-din.html b/hardware/intel/mraa-gpio-din.html
index 88e256b..0a775cb 100644
--- a/hardware/intel/mraa-gpio-din.html
+++ b/hardware/intel/mraa-gpio-din.html
@@ -1,7 +1,7 @@
 
 <script type="text/javascript">
     RED.nodes.registerType('mraa-gpio-din',{
-        category: 'GPIO',
+        category: 'IOT2050 gpio',
         color: '#a6bbcf',
         paletteLabel: 'digital',
         defaults: {
diff --git a/hardware/intel/mraa-gpio-dout.html b/hardware/intel/mraa-gpio-dout.html
index ed0289a..2ed3619 100644
--- a/hardware/intel/mraa-gpio-dout.html
+++ b/hardware/intel/mraa-gpio-dout.html
@@ -1,7 +1,7 @@
 
 <script type="text/javascript">
     RED.nodes.registerType('mraa-gpio-dout',{
-        category: 'Intel gpio',
+        category: 'IOT2050 gpio',
         color: '#a6bbcf',
         paletteLabel: 'digital',
         defaults: {
@@ -36,6 +36,7 @@
                 if (data === 5) { t = "Raspberry Pi"; }
                 if (data === 6) { t = "Beaglebone"; }
                 if (data === 7) { t = "Banana"; }
+                if (data === 25) { t = "IOT2050"; }
                 $('#btype').text(t);
                 if (data === 0) {
                     $('#node-input-pin').append($("<option></option>").attr("value",14).text("LED - Galileo v1"));
@@ -100,6 +101,6 @@
 </script>
 
 <script type="text/x-red" data-help-name="mraa-gpio-dout">
-    <p>A digital output pin for an Intel Galileo or Edison board.</p>
+    <p>A digital output pin for an IOT2050 board.</p>
     <p>The <code>msg.payload</code> should contain the value 0 or 1.</p>
 </script>
diff --git a/hardware/intel/mraa-gpio-led.html b/hardware/intel/mraa-gpio-led.html
new file mode 100644
index 0000000..967b464
--- /dev/null
+++ b/hardware/intel/mraa-gpio-led.html
@@ -0,0 +1,77 @@
+
+<script type="text/javascript">
+    RED.nodes.registerType('mraa-gpio-led',{
+        category: 'IOT2050 gpio',
+        color: '#a6bbcf',
+        paletteLabel: 'led',
+        defaults: {
+            name: {value:""},
+            pin:  {value:"", required: true},
+        },
+        inputs:1,
+        outputs:0,
+        icon: "arrow.png",
+        align: "right",
+        label: function() {
+            return this.name || "led";
+        },
+        labelStyle: function() {
+            return this.name?"node_label_italic":"";
+        },
+        oneditprepare: function() {
+            var pinnow = this.pin;
+            $.getJSON('mraa-gpio/'+this.id,function(data) {
+                var t = "unknown";
+                if (data === 0) { t = "Galileo v1"; }
+                if (data === 1) { t = "Galileo v2"; }
+                if (data === 2) { t = "Edison Fab C"; }
+                if (data === 3) { t = "DE3813 Baytrail"; }
+                if (data === 4) { t = "Minnow Max"; }
+                if (data === 5) { t = "Raspberry Pi"; }
+                if (data === 6) { t = "Beaglebone"; }
+                if (data === 7) { t = "Banana"; }
+                if (data === 25) { t = "IOT2050"; }
+                $('#btype').text(t);
+                $('#node-input-pin').val(pinnow);
+            });
+            $.getJSON('mraa-version/'+this.id,function(data) {
+                $('#ver-tip').text(data);
+            });
+
+            var setstate = function () {
+                if ($('#node-input-set').is(":checked")) {
+                    $("#node-set-state").show();
+                } else {
+                    $("#node-set-state").hide();
+                }
+            };
+            $("#node-input-set").change(function () { setstate(); });
+            setstate();
+        }
+    });
+</script>
+
+<script type="text/x-red" data-template-name="mraa-gpio-led">
+    <div class="form-row">
+        <label for="node-input-pin"><i class="fa fa-circle"></i> Led</label>
+        <select type="text" id="node-input-pin" style="width: 250px;">
+            <option value='' disabled selected style='display:none;'><span data-i18n="rpi-gpio.label.selectpin"></span></option>
+            <option value="0">User1 Led Green</option>
+            <option value="1">User1 Led Red</option>
+            <option value="2">User1 Led Orange</option>
+            <option value="3">User2 Led Green</option>
+            <option value="4">User2 Led Red</option>
+            <option value="5">User2 Led Orange</option>
+        </select>
+    </div>
+    <div class="form-row">
+        <label for="node-input-name"><i class="fa fa-tag"></i> Name</label>
+        <input type="text" id="node-input-name" placeholder="Name" style="width: 250px;">
+    </div>
+    <div class="form-tips">Board : <span id="btype">n/a</span><br/>mraa version : <span id="ver-tip">n/a</span></div>
+</script>
+
+<script type="text/x-red" data-help-name="mraa-gpio-led">
+    <p>Led Control for an IOT2050 board.</p>
+    <p>The <code>msg.payload</code> should contain the value 0 or 1.</p>
+</script>
diff --git a/hardware/intel/mraa-gpio-led.js b/hardware/intel/mraa-gpio-led.js
new file mode 100644
index 0000000..c5e45c6
--- /dev/null
+++ b/hardware/intel/mraa-gpio-led.js
@@ -0,0 +1,78 @@
+module.exports = function(RED) {
+    var m = require('mraa');
+    function LEDNode(n) {
+        RED.nodes.createNode(this, n);
+        this.pin = Number(n.pin);
+        this.led0 = new m.Led(0); /*user-led1-green*/
+        this.led1 = new m.Led(1); /*user-led1-red*/
+        this.led2 = new m.Led(2); /*user-led2-green*/
+        this.led3 = new m.Led(3); /*user-led2-red*/
+        this.on("input", function(msg) {
+            if (msg.payload == "1") {
+                switch(this.pin)
+                {
+                    case 0: /*User0 Led Green*/
+                            this.led0.setBrightness(1);
+                        break;
+                    case 1: /*User0 Led Red*/
+                            this.led1.setBrightness(1);
+                        break;
+                    case 2: /*User0 Orange*/
+                            this.led0.setBrightness(1);
+                            this.led1.setBrightness(1);
+                        break;
+                    case 3: /*User1 Led Green*/
+                            this.led2.setBrightness(1);
+                        break;
+                    case 4: /*User1 Led Red*/
+                            this.led3.setBrightness(1);
+                        break;
+                    case 5: /*User1 Orange*/
+                            this.led2.setBrightness(1);
+                            this.led3.setBrightness(1);
+                        break;
+                    default:
+                        break;
+                }
+            }
+            else {
+                switch(this.pin)
+                {
+                    case 0: /*User1 Led Green*/
+                            this.led0.setBrightness(0);
+                        break;
+                    case 1: /*User1 Led Red*/
+                            this.led1.setBrightness(0);
+                        break;
+                    case 2: /*User1 Orange*/
+                            this.led0.setBrightness(0);
+                            this.led1.setBrightness(0);
+                        break;
+                    case 3: /*User2 Led Green*/
+                            this.led2.setBrightness(0);
+                        break;
+                    case 4: /*User2 Led Red*/
+                            this.led3.setBrightness(0);
+                        break;
+                    case 5: /*User2 Orange*/
+                            this.led2.setBrightness(0);
+                            this.led3.setBrightness(0);
+                        break;
+                    default:
+                        break;
+                }
+            }
+        });
+        this.on('close', function() {
+        });
+    }
+    RED.nodes.registerType("mraa-gpio-led", LEDNode);
+
+    RED.httpAdmin.get('/mraa-gpio/:id', RED.auth.needsPermission('mraa-gpio.read'), function(req,res) {
+        res.json(m.getPlatformType());
+    });
+
+    RED.httpAdmin.get('/mraa-version/:id', RED.auth.needsPermission('mraa-version.read'), function(req,res) {
+        res.json(m.getVersion());
+    });
+}
diff --git a/hardware/intel/mraa-gpio-pwm.html b/hardware/intel/mraa-gpio-pwm.html
index 2dfb95e..bb4f8a6 100644
--- a/hardware/intel/mraa-gpio-pwm.html
+++ b/hardware/intel/mraa-gpio-pwm.html
@@ -1,7 +1,7 @@
 
 <script type="text/javascript">
     RED.nodes.registerType('mraa-gpio-pwm',{
-        category: 'Intel gpio',
+        category: 'IOT2050 gpio',
         color: '#a6bbcf',
         paletteLabel: 'pwm',
         defaults: {
@@ -35,6 +35,7 @@
                 if (data === 5) { t = "Raspberry Pi"; }
                 if (data === 6) { t = "Beaglebone"; }
                 if (data === 7) { t = "Banana"; }
+                if (data === 25) { t = "IOT2050"; }
                 $('#type-tip').text(t);
                 $('#node-input-pin').val(pinnow);
             });
@@ -60,12 +61,12 @@
         <label for="node-input-pin"><i class="fa fa-circle"></i> Pin</label>
         <select type="text" id="node-input-pin" style="width: 250px;">
             <option value='' disabled selected style='display:none;'><span data-i18n="rpi-gpio.label.selectpin"></span></option>
-            <option value="3">D3</option>
+            <option value="4">D4</option>
             <option value="5">D5</option>
             <option value="6">D6</option>
+            <option value="7">D7</option>
+            <option value="8">D8</option>
             <option value="9">D9</option>
-            <option value="10">D10</option>
-            <option value="11">D11</option>
         </select>
     </div>
     <div class="form-row">
@@ -80,9 +81,9 @@
 </script>
 
 <script type="text/x-red" data-help-name="mraa-gpio-pwm">
-    <p>A pulse width modulation (PWM) output pin for an Intel Galileo or Edison board.</p>
+    <p>A pulse width modulation (PWM) output pin for an IOT2050 board.</p>
     <p>The <code>msg.payload</code> should contain a floating point number value
     between 0 and 1, (or a string representation thereof.)</p>
     <p>For servo control set the period to 20mS and vary the input between 0.05 and 0.10</p>
-    <p><b>Note</b> : Only pins 3, 5, 6, 9, 10 & 11 support PWM output.</p>
+    <p><b>Note</b> : Only pins 4, 5, 6, 7, 8 & 9 support PWM output.</p>
 </script>
diff --git a/hardware/intel/package.json b/hardware/intel/package.json
index 0d1c7d5..5608009 100644
--- a/hardware/intel/package.json
+++ b/hardware/intel/package.json
@@ -16,7 +16,8 @@
             "mraa-gpio-ain": "mraa-gpio-ain.js",
             "mraa-gpio-din": "mraa-gpio-din.js",
             "mraa-gpio-dout": "mraa-gpio-dout.js",
-            "mraa-gpio-pwm": "mraa-gpio-pwm.js"
+            "mraa-gpio-pwm": "mraa-gpio-pwm.js",
+            "mraa-gpio-led": "mraa-gpio-led.js"
         }
     },
     "author": {
-- 
2.31.1

